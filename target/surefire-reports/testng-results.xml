<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="35465" started-at="2022-07-31T23:34:34Z" finished-at="2022-07-31T23:35:09Z">
    <groups>
    </groups>
    <test name="TestCase1" duration-ms="6839" started-at="2022-07-31T23:34:34Z" finished-at="2022-07-31T23:34:41Z">
      <class name="automationScripts.ContactPageTestCase1">
        <test-method status="PASS" signature="setUp()[pri:0, instance:automationScripts.ContactPageTestCase1@7dc7cbad]" name="setUp" is-config="true" duration-ms="5656" started-at="2022-08-01T09:34:34Z" finished-at="2022-08-01T09:34:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="contactFill()[pri:0, instance:automationScripts.ContactPageTestCase1@7dc7cbad]" name="contactFill" duration-ms="829" started-at="2022-08-01T09:34:40Z" finished-at="2022-08-01T09:34:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertFalse(Assert.java:62)
	at org.testng.Assert.assertFalse(Assert.java:72)
	at automationScripts.ContactPageTestCase1.contactFill(ContactPageTestCase1.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFill -->
        <test-method status="PASS" signature="getReports(org.testng.ITestResult)[pri:0, instance:automationScripts.ContactPageTestCase1@7dc7cbad]" name="getReports" is-config="true" duration-ms="248" started-at="2022-08-01T09:34:40Z" finished-at="2022-08-01T09:34:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFill status=FAILURE method=ContactPageTestCase1.contactFill()[pri:0, instance:automationScripts.ContactPageTestCase1@7dc7cbad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:automationScripts.ContactPageTestCase1@7dc7cbad]" name="tearDown" is-config="true" duration-ms="87" started-at="2022-08-01T09:34:41Z" finished-at="2022-08-01T09:34:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationScripts.ContactPageTestCase1 -->
    </test> <!-- TestCase1 -->
    <test name="TestCase2" duration-ms="23162" started-at="2022-07-31T23:34:41Z" finished-at="2022-07-31T23:35:04Z">
      <class name="automationScripts.ContactPageTestCase2">
        <test-method status="PASS" signature="setUp()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="setUp" is-config="true" duration-ms="3364" started-at="2022-08-01T09:34:41Z" finished-at="2022-08-01T09:34:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="objectCreate()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="objectCreate" is-config="true" duration-ms="1" started-at="2022-08-01T09:34:44Z" finished-at="2022-08-01T09:34:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectCreate -->
        <test-method status="PASS" signature="contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="contactMandatoryFill" duration-ms="4858" started-at="2022-08-01T09:34:44Z" finished-at="2022-08-01T09:34:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactMandatoryFill -->
        <test-method status="PASS" signature="contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="contactMandatoryFill" duration-ms="2068" started-at="2022-08-01T09:34:49Z" finished-at="2022-08-01T09:34:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactMandatoryFill -->
        <test-method status="PASS" signature="getReports(org.testng.ITestResult)[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="getReports" is-config="true" duration-ms="0" started-at="2022-08-01T09:34:49Z" finished-at="2022-08-01T09:34:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactMandatoryFill status=SUCCESS method=ContactPageTestCase2.contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReports -->
        <test-method status="PASS" signature="getReports(org.testng.ITestResult)[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="getReports" is-config="true" duration-ms="1" started-at="2022-08-01T09:34:51Z" finished-at="2022-08-01T09:34:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactMandatoryFill status=SUCCESS method=ContactPageTestCase2.contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReports -->
        <test-method status="PASS" signature="contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="contactMandatoryFill" duration-ms="7330" started-at="2022-08-01T09:34:51Z" finished-at="2022-08-01T09:34:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactMandatoryFill -->
        <test-method status="PASS" signature="getReports(org.testng.ITestResult)[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="getReports" is-config="true" duration-ms="0" started-at="2022-08-01T09:34:58Z" finished-at="2022-08-01T09:34:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactMandatoryFill status=SUCCESS method=ContactPageTestCase2.contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReports -->
        <test-method status="PASS" signature="contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="contactMandatoryFill" duration-ms="2100" started-at="2022-08-01T09:34:58Z" finished-at="2022-08-01T09:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactMandatoryFill -->
        <test-method status="PASS" signature="getReports(org.testng.ITestResult)[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="getReports" is-config="true" duration-ms="0" started-at="2022-08-01T09:35:00Z" finished-at="2022-08-01T09:35:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactMandatoryFill status=SUCCESS method=ContactPageTestCase2.contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReports -->
        <test-method status="PASS" signature="contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="contactMandatoryFill" duration-ms="3325" started-at="2022-08-01T09:35:00Z" finished-at="2022-08-01T09:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactMandatoryFill -->
        <test-method status="PASS" signature="getReports(org.testng.ITestResult)[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="getReports" is-config="true" duration-ms="1" started-at="2022-08-01T09:35:04Z" finished-at="2022-08-01T09:35:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactMandatoryFill status=SUCCESS method=ContactPageTestCase2.contactMandatoryFill()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:automationScripts.ContactPageTestCase2@cb5822]" name="tearDown" is-config="true" duration-ms="109" started-at="2022-08-01T09:35:04Z" finished-at="2022-08-01T09:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationScripts.ContactPageTestCase2 -->
    </test> <!-- TestCase2 -->
    <test name="TestCase3" duration-ms="5424" started-at="2022-07-31T23:35:04Z" finished-at="2022-07-31T23:35:09Z">
      <class name="automationScripts.CartPageTestCase3">
        <test-method status="PASS" signature="setReports()[pri:0, instance:automationScripts.CartPageTestCase3@224edc67]" name="setReports" is-config="true" duration-ms="233" started-at="2022-08-01T09:34:34Z" finished-at="2022-08-01T09:34:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReports -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:automationScripts.CartPageTestCase3@224edc67]" name="setUp" is-config="true" duration-ms="3279" started-at="2022-08-01T09:35:04Z" finished-at="2022-08-01T09:35:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="objectCreate()[pri:0, instance:automationScripts.CartPageTestCase3@224edc67]" name="objectCreate" is-config="true" duration-ms="1" started-at="2022-08-01T09:35:07Z" finished-at="2022-08-01T09:35:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectCreate -->
        <test-method status="PASS" signature="shoppingCart()[pri:0, instance:automationScripts.CartPageTestCase3@224edc67]" name="shoppingCart" duration-ms="2080" started-at="2022-08-01T09:35:07Z" finished-at="2022-08-01T09:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shoppingCart -->
        <test-method status="PASS" signature="getReports(org.testng.ITestResult)[pri:0, instance:automationScripts.CartPageTestCase3@224edc67]" name="getReports" is-config="true" duration-ms="0" started-at="2022-08-01T09:35:09Z" finished-at="2022-08-01T09:35:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shoppingCart status=SUCCESS method=CartPageTestCase3.shoppingCart()[pri:0, instance:automationScripts.CartPageTestCase3@224edc67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReports -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:automationScripts.CartPageTestCase3@224edc67]" name="tearDown" is-config="true" duration-ms="63" started-at="2022-08-01T09:35:09Z" finished-at="2022-08-01T09:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="extentFlush()[pri:0, instance:automationScripts.CartPageTestCase3@224edc67]" name="extentFlush" is-config="true" duration-ms="679" started-at="2022-08-01T09:35:09Z" finished-at="2022-08-01T09:35:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentFlush -->
      </class> <!-- automationScripts.CartPageTestCase3 -->
    </test> <!-- TestCase3 -->
  </suite> <!-- Suite -->
</testng-results>
